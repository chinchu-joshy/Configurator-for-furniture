/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import * as THREE from "three";
import { UseCustomization } from "../Context/Customization";
const Chair = (props) => {
  const { nodes, materials } = useGLTF("./Models/chair.gltf");
  let leatherTextureProps = {};
  let fabricTextureProps = {};
  const {
    material,
    legs,
    chairColor,
    cushionColor,
  } = UseCustomization();
  
    leatherTextureProps = useTexture({
     
      // map: "./Textures/Leather/Leather_008_Base Color.jpg",
      normalMap: "./Textures/Leather/Leather_008_Normal.jpg",
      roughnessMap: "./Textures/Leather/Leather_008_Roughness.jpg",
      aoMap: "./Textures/Leather/Leather_008_Ambient Occlusion.jpg",
    });

    // leatherTextureProps.map.repeat.set(2, 2);
    leatherTextureProps.normalMap.repeat.set(3, 3);
    leatherTextureProps.roughnessMap.repeat.set(3, 3);
    leatherTextureProps.aoMap.repeat.set(3, 3);
    // leatherTextureProps.map.wrapS = leatherTextureProps.map.wrapT =
    //   THREE.RepeatWrapping;
    leatherTextureProps.normalMap.wrapS = leatherTextureProps.normalMap.wrapT =
      THREE.RepeatWrapping;
    leatherTextureProps.aoMap.wrapS = leatherTextureProps.aoMap.wrapT =
      THREE.RepeatWrapping;
    leatherTextureProps.roughnessMap.wrapS =
      leatherTextureProps.roughnessMap.wrapT = THREE.RepeatWrapping;
  
    fabricTextureProps = useTexture({
      // map: "./Textures/Fabric/Fabric_Knitted_006_basecolor.jpg",
      normalMap: "./Textures/Fabric/Fabric_Knitted_006_normal.jpg",
      roughnessMap: "./Textures/Fabric/Fabric_Knitted_006_roughness.jpg",
      aoMap: "./Textures/Fabric/Fabric_Knitted_006_ambientOcclusion.jpg",
    });
    // fabricTextureProps.map.repeat.set(2, 2);
    fabricTextureProps.normalMap.repeat.set(4, 4);
    fabricTextureProps.roughnessMap.repeat.set(4, 4);
    fabricTextureProps.aoMap.repeat.set(4, 4);
    // fabricTextureProps.map.wrapS = fabricTextureProps.map.wrapT =
    //   THREE.RepeatWrapping;
    fabricTextureProps.normalMap.wrapS = fabricTextureProps.normalMap.wrapT =
      THREE.RepeatWrapping;
    fabricTextureProps.aoMap.wrapS = fabricTextureProps.aoMap.wrapT =
      THREE.RepeatWrapping;
    fabricTextureProps.roughnessMap.wrapS =
      fabricTextureProps.roughnessMap.wrapT = THREE.RepeatWrapping;
 

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Chair.geometry}>
        <meshStandardMaterial
          {...(material === "leather"
            ? leatherTextureProps
            : fabricTextureProps)}
            color={chairColor.color}
            roughness={10}
           
            metalness={0.5}
        />
      </mesh>
      <mesh geometry={nodes.Cushion.geometry} position={[0, 0.06, 0.04]}>
        <meshStandardMaterial {...fabricTextureProps}
         color={cushionColor.color}
         roughness={10}
         metalness={0.5} 
         />
      </mesh>
      <mesh
        geometry={nodes.Legs1.geometry}
        material={materials.Legs}
        visible={legs == true}
      />
      <mesh
        geometry={nodes.Legs2.geometry}
        material={materials.Legs}
        visible={legs == false}
      />
    </group>
  );
};

useGLTF.preload("./Models/chair.gltf");

export default Chair;
